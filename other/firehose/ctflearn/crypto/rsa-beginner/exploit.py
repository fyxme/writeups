# http://factordb.com/index.php
# https://latticehacks.cr.yp.to/rsa.html

from __future__ import division
from fractions import gcd

import binascii

MMI = lambda A, n,s=1,t=0,N=0: (n < 2 and t%N or MMI(n, A%n, t, s-A//n*t, N or n),-1)[n<1]

def hex_convert(i):
    return int(str(i),16)

def lcm(x,y):
    return abs(x*y)//gcd(x,y)
    l = max(x,y)

    while 1:
        if (l % x == 0) and (l % y == 0):
            return l
        l += 1

e = 3
c = 219878849218803628752496734037301843801487889344508611639028
n = 245841236512478852752909734912575581815967630033049838269083

p = 416064700201658306196320137931
q = 590872612825179551336102196593

assert(p*q == n)

totient = lcm(p-1, q-1)
d = MMI(e, (p-1)*(q-1))

print binascii.unhexlify(hex(pow(c,d,n))[2:-1])
