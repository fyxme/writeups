from itertools import cycle
import string
import binascii

def xor(a, b):
    print(type(a), type(b))
    if not isinstance(a, (bytes, bytearray)):
        a = bytes(a, 'utf-8')

    if not isinstance(b, (bytes, bytearray)):
        b = bytes(b, 'utf-8')

    return bytearray( a ^ b for (a,b) in zip(a,cycle(b)))

def encrypt(p, key):
    return xor(p, key)

def decrypt(c, key):
    return xor(c, key)

know_plaintext = "ALEXCTF{"

with open('cipher.txt') as f:
    cipher = map(lambda x: binascii.unhexlify(x.strip()), f.readlines())

xored = map(lambda x: xor(cipher, know_plaintext), cipher)

print(xored)
