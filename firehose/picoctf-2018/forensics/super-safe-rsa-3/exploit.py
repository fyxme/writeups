def egcd(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q, r = b//a, b%a
        m, n = x-u*q, y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
        gcd = b
    return gcd, x, y

def printit(m):
    # print m, hex(m)
    m = hex(m)[2:-1]
    m = [int(m[i:i+2],16) for i in range(0, len(m), 2)]
    m = map(chr, m)
    print "".join(m)

def main():
    n = 5063602358623256943350463523635926967606973855016990937723016578216090522814620999445322424465685400701832877752407070951307836857899960671927082420114157048065005276817411316809925587635791578397016588853759173091826594490094030715604637531393593280900147263222267568202383366617716704623179367108352863

    fcts = [
        2841760261,
        3114321481,
        2227318817,
        2346166153,
        2629337041,
        2718326353,
        3411848051,
        3789196951,
        2944458739,
        3777727169,
        2151668039,
        2170933727,
        2908523063,
        3261009287,
        3440090273,
        3575240987,
        3606379991,
        3711447947,
        2165209117,
        2241168359,
        2274764599,
        3146076607,
        3180592469,
        3186151901,
        3234704219,
        3326339647,
        3752642423,
        3851757253,
        3862812067,
        3944492611,
        4166755501,
        4203061979
    ]


    e = 65537
    ct = 2134720827597837735049779790912016065440258293716024714671769081542059907100201632690773029558371916640191974167127423707907144039877567980458957310995930924500949411503242402258287128877441449288734534479531154969188226084263024050947437736343445378059624268405733264774708226125426432643342526630800398

    ds = []

    for ri in fcts:
        moduli = ri-1
        gcd, a, b = egcd(e, moduli)
        di = a % moduli
        ds.append(di)

    print "ds:", ds

    ts = []
    m = fcts[0]

    for ri in fcts[1:]: # remove first factor
        gcd, a, b = egcd(m, ri)
        ti = a % ri
        m = m * ri
        ts.append(ti)

    print "ts:", ts

    xs = []

    # solving y === x^e (mod N)
    for i, ri in enumerate(fcts):
        xs.append(pow((ct % ri),ds[i], ri))

    print "xs:", xs

    x = xs[0]
    m = fcts[0]
    for i, r in enumerate(fcts[1:]):
        x = x + m * ((((xs[i+1] - x)%r)*ts[i]) % r)
        m = m * r

    assert(m == n)

    printit(x)

if __name__ == "__main__":
    main()
